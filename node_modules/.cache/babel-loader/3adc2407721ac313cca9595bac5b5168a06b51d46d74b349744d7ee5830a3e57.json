{"ast":null,"code":"import React,{useEffect,useState}from'react';import'./news.css';import{jsx as _jsx,Fragment as _Fragment,jsxs as _jsxs}from\"react/jsx-runtime\";const News=()=>{const[news,setNews]=useState([]);const[currentIndex,setCurrentIndex]=useState(0);// Start with 0 to show the first 3 items\nconst itemsPerPage=3;// Format the current date\nconst formatCurrentDate=()=>{const currentDate=new Date();// Ensure you have a current date object\nconst monthName=new Intl.DateTimeFormat('en-US',{month:'long'}).format(currentDate);const dayNumber=currentDate.getDate();let daySuffix;switch(dayNumber){case 1:case 21:case 31:daySuffix='st';break;case 2:case 22:daySuffix='nd';break;case 3:case 23:daySuffix='rd';break;default:daySuffix='th';break;}const formattedDay=`${dayNumber}${daySuffix}`;const year=currentDate.getFullYear();return/*#__PURE__*/_jsxs(_Fragment,{children:[monthName,\" \",formattedDay,/*#__PURE__*/_jsx(\"br\",{}),year]});};// Load news function\nconst loadNews=()=>{fetch('https://tronai.io/v1/m_news',{method:'POST',headers:{'Accept':'application/json'},body:''}).then(response=>{if(!response.ok){throw new Error('Network response was not ok');}return response.json();}).then(data=>{setNews(data.data);// Set all news data initially\n}).catch(error=>{console.error('Error loading data:',error);});};useEffect(()=>{loadNews();},[]);const handleSeeMore=()=>{setCurrentIndex(prevIndex=>{const newIndex=prevIndex+itemsPerPage;return newIndex<news.length?newIndex:prevIndex;// Ensure it doesn't go out of bounds\n});};const displayedNews=news.slice(currentIndex,currentIndex+itemsPerPage);// Get the news to display\nreturn/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{className:\"box-container\",children:/*#__PURE__*/_jsx(\"div\",{className:\"rounded-box\",children:/*#__PURE__*/_jsx(\"div\",{className:\"month-year\",children:formatCurrentDate()})})}),/*#__PURE__*/_jsxs(\"div\",{id:\"news\",children:[displayedNews.length>0?displayedNews.map((item,index)=>{const date=new Date(item.first_published_at);const formattedDate=date.toLocaleDateString('en-US',{month:'short',day:'numeric'});return/*#__PURE__*/_jsx(\"div\",{className:\"news-container\",children:/*#__PURE__*/_jsx(\"div\",{id:\"news-link\",children:/*#__PURE__*/_jsxs(\"a\",{href:item.link,target:\"_blank\",rel:\"noopener noreferrer\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"time\",children:formattedDate}),/*#__PURE__*/_jsx(\"div\",{className:\"headline\",children:item.title}),/*#__PURE__*/_jsx(\"div\",{className:\"news\",children:item.subtitle})]})})},index);}):/*#__PURE__*/_jsx(\"p\",{children:\"No news available.\"}),currentIndex+itemsPerPage<news.length&&/*#__PURE__*/_jsx(\"div\",{id:\"spacing\",children:/*#__PURE__*/_jsx(\"button\",{id:\"seeMoreBtn\",onClick:handleSeeMore,children:\"See More\"})})]})]});};export default News;","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","News","news","setNews","currentIndex","setCurrentIndex","itemsPerPage","formatCurrentDate","currentDate","Date","monthName","Intl","DateTimeFormat","month","format","dayNumber","getDate","daySuffix","formattedDay","year","getFullYear","children","loadNews","fetch","method","headers","body","then","response","ok","Error","json","data","catch","error","console","handleSeeMore","prevIndex","newIndex","length","displayedNews","slice","className","id","map","item","index","date","first_published_at","formattedDate","toLocaleDateString","day","href","link","target","rel","title","subtitle","onClick"],"sources":["/Users/ngaigarricktrondao/Desktop/Tron-Net/TronAI-React/src/components/News/News.js"],"sourcesContent":["import React, { useEffect, useState} from 'react';\nimport './news.css';\n\nconst News = () => {\n    const [news, setNews] = useState([]);\n    const [currentIndex, setCurrentIndex] = useState(0); // Start with 0 to show the first 3 items\n    const itemsPerPage = 3;\n  \n    // Format the current date\n    const formatCurrentDate = () => {\n        const currentDate = new Date(); // Ensure you have a current date object\n        const monthName = new Intl.DateTimeFormat('en-US', { month: 'long' }).format(currentDate);\n        const dayNumber = currentDate.getDate();\n        let daySuffix;\n      \n        switch (dayNumber) {\n          case 1:\n          case 21:\n          case 31:\n            daySuffix = 'st';\n            break;\n          case 2:\n          case 22:\n            daySuffix = 'nd';\n            break;\n          case 3:\n          case 23:\n            daySuffix = 'rd';\n            break;\n          default:\n            daySuffix = 'th';\n            break;\n        }\n      \n        const formattedDay = `${dayNumber}${daySuffix}`;\n        const year = currentDate.getFullYear();\n      \n        return (\n            <>\n              {monthName} {formattedDay}\n              <br />\n              {year}\n            </>\n          );        \n      };\n  \n    // Load news function\n    const loadNews = () => {\n      fetch('https://tronai.io/v1/m_news', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json'\n        },\n        body: ''\n      })\n        .then(response => {\n          if (!response.ok) {\n            throw new Error('Network response was not ok');\n          }\n          return response.json();\n        })\n        .then(data => {\n          setNews(data.data); // Set all news data initially\n        })\n        .catch(error => {\n          console.error('Error loading data:', error);\n        });\n    };\n  \n    useEffect(() => {\n      loadNews();\n    }, []);\n  \n    const handleSeeMore = () => {\n      setCurrentIndex(prevIndex => {\n        const newIndex = prevIndex + itemsPerPage;\n        return newIndex < news.length ? newIndex : prevIndex; // Ensure it doesn't go out of bounds\n      });\n    };\n  \n    const displayedNews = news.slice(currentIndex, currentIndex + itemsPerPage); // Get the news to display\n  \n    return (\n      <div>\n        <div className=\"box-container\">\n          <div className=\"rounded-box\">\n            <div className=\"month-year\">{formatCurrentDate()}</div>\n          </div>\n        </div>\n        <div id=\"news\">\n          {displayedNews.length > 0 ? (\n            displayedNews.map((item, index) => {\n              const date = new Date(item.first_published_at);\n              const formattedDate = date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n              return (\n                <div className=\"news-container\" key={index}>\n                  <div id=\"news-link\">\n                    <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                      <div className=\"time\">{formattedDate}</div>\n                      <div className=\"headline\">{item.title}</div>\n                      <div className=\"news\">{item.subtitle}</div>\n                    </a>\n                  </div>\n                </div>\n              );\n            })\n          ) : (\n            <p>No news available.</p>\n          )}\n          {currentIndex + itemsPerPage < news.length && (\n            <div id=\"spacing\">\n              <button id=\"seeMoreBtn\" onClick={handleSeeMore}>\n                See More\n              </button>\n            </div>\n          )}\n        </div>\n      </div>\n    );\n  };\n  \n \nexport default News;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}