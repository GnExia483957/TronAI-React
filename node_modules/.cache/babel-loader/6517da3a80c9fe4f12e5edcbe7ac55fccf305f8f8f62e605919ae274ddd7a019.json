{"ast":null,"code":"var _jsxFileName = \"/Users/ngaigarricktrondao/Desktop/Tron-Net/TronAI-React/src/Pages/Test.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Test = () => {\n  _s();\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://tronai.io/v1/m_news', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json'\n          },\n          body: ''\n        });\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        const result = await response.json();\n        console.log(result);\n        setData(result);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, []);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Error: \", error]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 21\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"news-link\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"${postData.data[i].link}\",\n          target: \"_blank\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"headline\",\n            children: [\"$\", result.data[0].title]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"news\",\n            children: [\"$\", result.data[0].subtitle]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), \"    \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Test, \"RiL7vLwmC7ZWXKL/bXt2EIBjBYk=\");\n_c = Test;\nexport default Test;\nvar _c;\n$RefreshReg$(_c, \"Test\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Test","_s","data","setData","loading","setLoading","error","setError","fetchData","response","fetch","method","headers","body","ok","Error","result","json","console","log","err","message","children","fileName","_jsxFileName","lineNumber","columnNumber","className","id","href","target","class","title","subtitle","_c","$RefreshReg$"],"sources":["/Users/ngaigarricktrondao/Desktop/Tron-Net/TronAI-React/src/Pages/Test.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst Test = () => {\n  const [data, setData] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch('https://tronai.io/v1/m_news', {\n          method: 'POST',\n          headers: {\n            'Accept': 'application/json'\n          },\n          body: ''\n        });\n        \n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        \n        const result = await response.json();\n        console.log(result);\n        setData(result);\n      } catch (err) {\n        setError(err.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  if (loading) return <div>Loading...</div>;\n  if (error) return <div>Error: {error}</div>;\n\n  return (\n    <div>\n      <h1>News</h1>\n      <div className=\"news-container\">\n            <div id=\"news-link\">\n              <a href=\"${postData.data[i].link}\" target=\"_blank\">\n                {/* <div class=\"time\">${formattedDate}</div> */}\n                <div class=\"headline\">${result.data[0].title}</div>\n                <div class=\"news\">${result.data[0].subtitle}</div>          \n              </a>\n            </div>\n          </div>    </div>\n  );\n};\n\nexport default Test;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}