{"ast":null,"code":"var _jsxFileName = \"/Users/ngaigarricktrondao/Desktop/Tron-Net/TronAI-React/src/Pages/News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NewsLoader = () => {\n  _s();\n  const [newsItems, setNewsItems] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const itemsPerPage = 5; // Adjust this value as needed\n\n  useEffect(() => {\n    loadNews();\n  }, []);\n  const loadNews = async () => {\n    try {\n      const response = await fetch('https://a8fb-203-12-203-2.ngrok-free.app/v1/m_news', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json'\n        },\n        body: ''\n      });\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      const postData = await response.json();\n      console.log(postData);\n\n      // Clear existing news items and load new ones\n      if (currentIndex < postData.data.length) {\n        const newItems = postData.data.slice(currentIndex, currentIndex + itemsPerPage);\n        setNewsItems(prevItems => [...prevItems, ...newItems]);\n        setCurrentIndex(prevIndex => prevIndex + itemsPerPage);\n      } else {\n        setNewsItems(prevItems => [...prevItems, {\n          message: 'No more news to load.'\n        }]);\n      }\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setNewsItems(prevItems => [...prevItems, {\n        message: 'Error loading data.'\n      }]);\n    }\n  };\n  const formatDate = dateString => {\n    const date = new Date(dateString);\n    const options = {\n      month: 'short',\n      day: 'numeric'\n    };\n    return date.toLocaleDateString('en-US', options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"news\",\n    children: [newsItems.map((item, index) => item.message ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: item.message\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"news-link\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: item.link,\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"time\",\n            children: formatDate(item.first_published_at)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"headline\",\n            children: item.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"news\",\n            children: item.subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, item.link, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"seeMoreBtn\",\n      onClick: loadNews,\n      children: \"See More News\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(NewsLoader, \"Md5lHsesvxg8K3W9hHK9KBQoNxk=\");\n_c = NewsLoader;\nexport default NewsLoader;\nvar _c;\n$RefreshReg$(_c, \"NewsLoader\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","NewsLoader","_s","newsItems","setNewsItems","currentIndex","setCurrentIndex","itemsPerPage","loadNews","response","fetch","method","headers","body","ok","Error","postData","json","console","log","data","length","newItems","slice","prevItems","prevIndex","message","error","formatDate","dateString","date","Date","options","month","day","toLocaleDateString","id","children","map","item","index","fileName","_jsxFileName","lineNumber","columnNumber","className","href","link","target","rel","first_published_at","title","subtitle","onClick","_c","$RefreshReg$"],"sources":["/Users/ngaigarricktrondao/Desktop/Tron-Net/TronAI-React/src/Pages/News.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\n\nconst NewsLoader = () => {\n  const [newsItems, setNewsItems] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const itemsPerPage = 5; // Adjust this value as needed\n\n  useEffect(() => {\n    loadNews();\n  }, []);\n\n  const loadNews = async () => {\n    try {\n      const response = await fetch('https://a8fb-203-12-203-2.ngrok-free.app/v1/m_news', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n        },\n        body: '',\n      });\n\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n\n      const postData = await response.json();\n      console.log(postData);\n\n      // Clear existing news items and load new ones\n      if (currentIndex < postData.data.length) {\n        const newItems = postData.data.slice(currentIndex, currentIndex + itemsPerPage);\n        setNewsItems(prevItems => [...prevItems, ...newItems]);\n        setCurrentIndex(prevIndex => prevIndex + itemsPerPage);\n      } else {\n        setNewsItems(prevItems => [...prevItems, { message: 'No more news to load.' }]);\n      }\n    } catch (error) {\n      console.error('Error loading data:', error);\n      setNewsItems(prevItems => [...prevItems, { message: 'Error loading data.' }]);\n    }\n  };\n\n  const formatDate = (dateString) => {\n    const date = new Date(dateString);\n    const options = { month: 'short', day: 'numeric' };\n    return date.toLocaleDateString('en-US', options);\n  };\n\n  return (\n    <div id=\"news\">\n      {newsItems.map((item, index) => (\n        item.message ? (\n          <p key={index}>{item.message}</p>\n        ) : (\n          <div className=\"news-container\" key={item.link}>\n            <div id=\"news-link\">\n              <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                <div className=\"time\">{formatDate(item.first_published_at)}</div>\n                <div className=\"headline\">{item.title}</div>\n                <div className=\"news\">{item.subtitle}</div>\n              </a>\n            </div>\n          </div>\n        )\n      ))}\n      <button id=\"seeMoreBtn\" onClick={loadNews}>See More News</button>\n    </div>\n  );\n};\n\nexport default NewsLoader;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}