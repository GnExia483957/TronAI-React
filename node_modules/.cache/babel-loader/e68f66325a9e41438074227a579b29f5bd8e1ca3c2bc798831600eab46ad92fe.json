{"ast":null,"code":"var _jsxFileName = \"/Users/ngaigarricktrondao/Desktop/Tron-Net/TronAI-React/src/Pages/Agent.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport '../styles/Agent.css'; // Assuming you have a CSS file for styles\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Agent = () => {\n  _s();\n  const [messages, setMessages] = useState([{\n    sender: 'bot',\n    text: 'Dear Tron user, how can I help?'\n  }]);\n  const [userInput, setUserInput] = useState('');\n  const [isSending, setIsSending] = useState(false);\n  const chatContainerRef = useRef(null);\n  const enterKeyDisabledRef = useRef(false);\n  useEffect(() => {\n    chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n  }, [messages]);\n  const handleInputChange = e => {\n    setUserInput(e.target.value);\n  };\n  const handleSendMessage = () => {\n    const trimmedMessage = userInput.trim();\n    if (trimmedMessage === '') {\n      appendMessage('bot', 'Please enter a message so I can properly assist you.');\n      return;\n    }\n    appendMessage('user', trimmedMessage);\n    setUserInput('');\n    setIsSending(true);\n\n    // Disable send button for 4 seconds\n    enterKeyDisabledRef.current = true;\n    setTimeout(() => {\n      enterKeyDisabledRef.current = false;\n    }, 4000);\n    fetchResponse(trimmedMessage);\n  };\n  const fetchResponse = query => {\n    showThinkingAnimation();\n    fetch('https://tronai.io/v1/g_chat', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        query\n      }),\n      credentials: 'include'\n    }).then(response => {\n      if (!response.ok) throw new Error('Network response was not ok');\n      return response.json();\n    }).then(data => {\n      hideThinkingAnimation();\n      typeOutMessage(data.data.answer, 'bot');\n    }).catch(error => {\n      console.error('There was a problem with the fetch operation:', error);\n      hideThinkingAnimation();\n      typeOutMessage('Sorry, something went wrong. Please try again.', 'bot');\n    }).finally(() => {\n      setIsSending(false);\n    });\n  };\n  const typeOutMessage = (text, sender) => {\n    const messageBox = {\n      sender,\n      text\n    };\n    setMessages(prevMessages => [...prevMessages, messageBox]);\n  };\n  const appendMessage = (sender, text) => {\n    setMessages(prevMessages => [...prevMessages, {\n      sender,\n      text\n    }]);\n  };\n  const showThinkingAnimation = () => {\n    const thinkingMessage = {\n      sender: 'bot',\n      text: /*#__PURE__*/_jsxDEV(ThinkingAnimation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 56\n      }, this)\n    };\n    setMessages(prevMessages => [...prevMessages, thinkingMessage]);\n  };\n  const hideThinkingAnimation = () => {\n    setMessages(prevMessages => prevMessages.filter(msg => msg.text !== '...thinking...'));\n  };\n  const handleKeyPress = e => {\n    if (e.key === 'Enter' && !enterKeyDisabledRef.current) {\n      handleSendMessage();\n    }\n  };\n  const handleClose = () => {\n    // Logic to handle closing the chat (e.g., hiding the component)\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"close-button\",\n      id: \"closeModal\",\n      onClick: handleClose,\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-container\",\n      ref: chatContainerRef,\n      id: \"chatContainer\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: [msg.sender === 'user' ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message-box\",\n          children: msg.text\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"title\",\n            children: \"Assistant\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"message-box\",\n            children: msg.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"timestamp\",\n          children: getCurrentTime()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 25\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"userInput\",\n        value: userInput,\n        placeholder: \"Type your message...\",\n        onChange: handleInputChange,\n        onKeyPress: handleKeyPress,\n        disabled: isSending\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"send-button\",\n        id: \"sendButton\",\n        onClick: handleSendMessage,\n        disabled: isSending,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 9\n  }, this);\n};\n_s(Agent, \"+hqABJVi4qSsS2cECFGVmdSJVEI=\");\n_c = Agent;\nconst getCurrentTime = () => {\n  const now = new Date();\n  return now.toLocaleTimeString([], {\n    hour: '2-digit',\n    minute: '2-digit'\n  });\n};\nexport default Agent;\nvar _c;\n$RefreshReg$(_c, \"Agent\");","map":{"version":3,"names":["React","useState","useEffect","useRef","jsxDEV","_jsxDEV","Fragment","_Fragment","Agent","_s","messages","setMessages","sender","text","userInput","setUserInput","isSending","setIsSending","chatContainerRef","enterKeyDisabledRef","current","scrollTop","scrollHeight","handleInputChange","e","target","value","handleSendMessage","trimmedMessage","trim","appendMessage","setTimeout","fetchResponse","query","showThinkingAnimation","fetch","method","headers","body","JSON","stringify","credentials","then","response","ok","Error","json","data","hideThinkingAnimation","typeOutMessage","answer","catch","error","console","finally","messageBox","prevMessages","thinkingMessage","ThinkingAnimation","fileName","_jsxFileName","lineNumber","columnNumber","filter","msg","handleKeyPress","key","handleClose","className","children","id","onClick","ref","map","index","getCurrentTime","type","placeholder","onChange","onKeyPress","disabled","_c","now","Date","toLocaleTimeString","hour","minute","$RefreshReg$"],"sources":["/Users/ngaigarricktrondao/Desktop/Tron-Net/TronAI-React/src/Pages/Agent.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport '../styles/Agent.css'; // Assuming you have a CSS file for styles\n\nconst Agent = () => {\n    const [messages, setMessages] = useState([{ sender: 'bot', text: 'Dear Tron user, how can I help?' }]);\n    const [userInput, setUserInput] = useState('');\n    const [isSending, setIsSending] = useState(false);\n    const chatContainerRef = useRef(null);\n    const enterKeyDisabledRef = useRef(false);\n\n    useEffect(() => {\n        chatContainerRef.current.scrollTop = chatContainerRef.current.scrollHeight;\n    }, [messages]);\n\n    const handleInputChange = (e) => {\n        setUserInput(e.target.value);\n    };\n\n    const handleSendMessage = () => {\n        const trimmedMessage = userInput.trim();\n        if (trimmedMessage === '') {\n            appendMessage('bot', 'Please enter a message so I can properly assist you.');\n            return;\n        }\n\n        appendMessage('user', trimmedMessage);\n        setUserInput('');\n        setIsSending(true);\n\n        // Disable send button for 4 seconds\n        enterKeyDisabledRef.current = true;\n        setTimeout(() => {\n            enterKeyDisabledRef.current = false;\n        }, 4000);\n\n        fetchResponse(trimmedMessage);\n    };\n\n    const fetchResponse = (query) => {\n        showThinkingAnimation();\n\n        fetch('https://tronai.io/v1/g_chat', {\n            method: 'POST',\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ query }),\n            credentials: 'include',\n        })\n        .then(response => {\n            if (!response.ok) throw new Error('Network response was not ok');\n            return response.json();\n        })\n        .then(data => {\n            hideThinkingAnimation();\n            typeOutMessage(data.data.answer, 'bot');\n        })\n        .catch(error => {\n            console.error('There was a problem with the fetch operation:', error);\n            hideThinkingAnimation();\n            typeOutMessage('Sorry, something went wrong. Please try again.', 'bot');\n        })\n        .finally(() => {\n            setIsSending(false);\n        });\n    };\n\n    const typeOutMessage = (text, sender) => {\n        const messageBox = { sender, text };\n        setMessages(prevMessages => [...prevMessages, messageBox]);\n    };\n\n    const appendMessage = (sender, text) => {\n        setMessages(prevMessages => [...prevMessages, { sender, text }]);\n    };\n\n    const showThinkingAnimation = () => {\n        const thinkingMessage = { sender: 'bot', text: <ThinkingAnimation /> };\n        setMessages(prevMessages => [...prevMessages, thinkingMessage]);\n    };\n\n    const hideThinkingAnimation = () => {\n        setMessages(prevMessages => prevMessages.filter(msg => msg.text !== '...thinking...'));\n    };\n\n    const handleKeyPress = (e) => {\n        if (e.key === 'Enter' && !enterKeyDisabledRef.current) {\n            handleSendMessage();\n        }\n    };\n\n    const handleClose = () => {\n        // Logic to handle closing the chat (e.g., hiding the component)\n    };\n\n    return (\n        <div className=\"chatbot-container\">\n            <button className=\"close-button\" id=\"closeModal\" onClick={handleClose}>X</button>\n\n            <div className=\"chat-container\" ref={chatContainerRef} id=\"chatContainer\">\n                {messages.map((msg, index) => (\n                    <div key={index} className={`message ${msg.sender}`}>\n                        {msg.sender === 'user' ? (\n                            <div className=\"message-box\">{msg.text}</div>\n                        ) : (\n                            <>\n                                <div className=\"title\">Assistant</div>\n                                <div className=\"message-box\">{msg.text}</div>\n                            </>\n                        )}\n                        <div className=\"timestamp\">{getCurrentTime()}</div>\n                    </div>\n                ))}\n            </div>\n\n            <div className=\"input-container\">\n                <input\n                    type=\"text\"\n                    id=\"userInput\"\n                    value={userInput}\n                    placeholder=\"Type your message...\"\n                    onChange={handleInputChange}\n                    onKeyPress={handleKeyPress}\n                    disabled={isSending}\n                />\n                <button className=\"send-button\" id=\"sendButton\" onClick={handleSendMessage} disabled={isSending}>\n                    Send\n                </button>\n            </div>\n        </div>\n    );\n};\n\nconst getCurrentTime = () => {\n    const now = new Date();\n    return now.toLocaleTimeString([], { hour: '2-digit', minute: '2-digit' });\n};\n\nexport default Agent;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}