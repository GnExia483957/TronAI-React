{"ast":null,"code":"var _jsxFileName = \"/Users/ngaigarricktrondao/Desktop/Tron-Net/TronAI-React/src/components/News/News.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useCallback } from 'react';\nimport '../../styles/news.css';\nimport data from \"../../assets/JSON/data.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst News = () => {\n  _s();\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [news, setNews] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(3); // Initialize to 3 to display the first 3 items\n  const itemsPerPage = 3;\n\n  // Format the current date\n  const formatCurrentDate = () => {\n    const monthName = new Intl.DateTimeFormat('en-US', {\n      month: 'long'\n    }).format(currentDate);\n    const dayNumber = currentDate.getDate();\n    let daySuffix;\n    switch (dayNumber) {\n      case 1:\n      case 21:\n      case 31:\n        daySuffix = 'st';\n        break;\n      case 2:\n      case 22:\n        daySuffix = 'nd';\n        break;\n      case 3:\n      case 23:\n        daySuffix = 'rd';\n        break;\n      default:\n        daySuffix = 'th';\n        break;\n    }\n    const formattedDay = `${dayNumber}${daySuffix}`;\n    const year = currentDate.getFullYear();\n    return `${monthName} ${formattedDay}, ${year}`;\n  };\n\n  // Load news function\n  const loadNews = () => {\n    fetch('https://tronai.io/v1/m_news', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json'\n      },\n      body: ''\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error('Network response was not ok');\n      }\n      return response.json();\n    }).then(data => {\n      setNews(data.data); // Set all news data initially\n    }).catch(error => {\n      console.error('Error loading data:', error);\n    });\n  };\n  useEffect(() => {\n    loadNews();\n  }, []);\n  const handleSeeMore = () => {\n    setCurrentIndex(prevIndex => Math.min(prevIndex + itemsPerPage, news.length));\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"box-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rounded-box\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"month-year\",\n          children: formatCurrentDate()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"news\",\n      children: [news.slice(0, currentIndex).map((item, index) => {\n        const date = new Date(item.first_published_at);\n        const formattedDate = date.toLocaleDateString('en-US', {\n          month: 'short',\n          day: 'numeric'\n        });\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"news-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"news-link\",\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: item.link,\n              target: \"_blank\",\n              rel: \"noopener noreferrer\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"time\",\n                children: formattedDate\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"headline\",\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"news\",\n                children: item.subtitle\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this);\n      }), currentIndex >= news.length && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No more news to load.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 41\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), currentIndex < news.length && /*#__PURE__*/_jsxDEV(\"button\", {\n      id: \"seeMoreBtn\",\n      onClick: handleSeeMore,\n      children: \"See More\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(News, \"Tgnp/l54liN/ifuAF/teG6qJlOM=\");\n_c = News;\nexport default News;\nvar _c;\n$RefreshReg$(_c, \"News\");","map":{"version":3,"names":["React","useEffect","useState","useCallback","data","jsxDEV","_jsxDEV","News","_s","currentDate","setCurrentDate","Date","news","setNews","currentIndex","setCurrentIndex","itemsPerPage","formatCurrentDate","monthName","Intl","DateTimeFormat","month","format","dayNumber","getDate","daySuffix","formattedDay","year","getFullYear","loadNews","fetch","method","headers","body","then","response","ok","Error","json","catch","error","console","handleSeeMore","prevIndex","Math","min","length","children","className","fileName","_jsxFileName","lineNumber","columnNumber","id","slice","map","item","index","date","first_published_at","formattedDate","toLocaleDateString","day","href","link","target","rel","title","subtitle","onClick","_c","$RefreshReg$"],"sources":["/Users/ngaigarricktrondao/Desktop/Tron-Net/TronAI-React/src/components/News/News.js"],"sourcesContent":["import React, { useEffect, useState, useCallback} from 'react';\nimport '../../styles/news.css';\nimport data from \"../../assets/JSON/data.json\";\n\nconst News = () => {\n  const [currentDate, setCurrentDate] = useState(new Date());\n  const [news, setNews] = useState([]);\n  const [currentIndex, setCurrentIndex] = useState(3); // Initialize to 3 to display the first 3 items\n  const itemsPerPage = 3;\n\n  // Format the current date\n  const formatCurrentDate = () => {\n    const monthName = new Intl.DateTimeFormat('en-US', { month: 'long' }).format(currentDate);\n    const dayNumber = currentDate.getDate();\n    let daySuffix;\n\n    switch (dayNumber) {\n      case 1:\n      case 21:\n      case 31:\n        daySuffix = 'st';\n        break;\n      case 2:\n      case 22:\n        daySuffix = 'nd';\n        break;\n      case 3:\n      case 23:\n        daySuffix = 'rd';\n        break;\n      default:\n        daySuffix = 'th';\n        break;\n    }\n\n    const formattedDay = `${dayNumber}${daySuffix}`;\n    const year = currentDate.getFullYear();\n\n    return `${monthName} ${formattedDay}, ${year}`;\n  };\n\n  // Load news function\n  const loadNews = () => {\n    fetch('https://tronai.io/v1/m_news', {\n      method: 'POST',\n      headers: {\n        'Accept': 'application/json'\n      },\n      body: ''\n    })\n      .then(response => {\n        if (!response.ok) {\n          throw new Error('Network response was not ok');\n        }\n        return response.json();\n      })\n      .then(data => {\n        setNews(data.data); // Set all news data initially\n      })\n      .catch(error => {\n        console.error('Error loading data:', error);\n      });\n  };\n\n  useEffect(() => {\n    loadNews();\n  }, []);\n\n  const handleSeeMore = () => {\n    setCurrentIndex(prevIndex => Math.min(prevIndex + itemsPerPage, news.length));\n  };\n\n  return (\n    <div>\n      <div className=\"box-container\">\n        <div className=\"rounded-box\">\n          <div className=\"month-year\">{formatCurrentDate()}</div>\n        </div>\n      </div>\n      <div id=\"news\">\n        {news.slice(0, currentIndex).map((item, index) => {\n          const date = new Date(item.first_published_at);\n          const formattedDate = date.toLocaleDateString('en-US', { month: 'short', day: 'numeric' });\n          return (\n            <div className=\"news-container\" key={index}>\n              <div id=\"news-link\">\n                <a href={item.link} target=\"_blank\" rel=\"noopener noreferrer\">\n                  <div className=\"time\">{formattedDate}</div>\n                  <div className=\"headline\">{item.title}</div>\n                  <div className=\"news\">{item.subtitle}</div>\n                </a>\n              </div>\n            </div>\n          );\n        })}\n        {currentIndex >= news.length && <p>No more news to load.</p>}\n      </div>\n      {currentIndex < news.length && (\n        <button id=\"seeMoreBtn\" onClick={handleSeeMore}>\n          See More\n        </button>\n      )}\n    </div>\n  );\n};\n\nexport default News;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}